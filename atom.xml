<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pb</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-11T14:02:08.581Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>pb</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java IO流</title>
    <link href="http://example.com/2021/01/11/java-IO%E6%B5%81/"/>
    <id>http://example.com/2021/01/11/java-IO%E6%B5%81/</id>
    <published>2021-01-11T06:25:08.000Z</published>
    <updated>2021-01-11T14:02:08.581Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>java io 其实看过好几遍了，但是看过就忘了，没有系统的总结，所以记下来加深印象。</p></blockquote><a id="more"></a><h2 id="File类"><a href="#File类" class="headerlink" title="File类"></a>File类</h2><h3 id="File类构造器"><a href="#File类构造器" class="headerlink" title="File类构造器"></a>File类构造器</h3><p>File类的一个对象通常来代替一个文件或者一个文件夹。</p><p>1.<code>public File(String pathname)</code>：以pathname为路径创建File对象，可以是绝对路径或者相对路径。</p><ul><li><p>绝对路径：是一个固定的路径,从盘符开始。</p></li><li><p>相对路径：是相对于某个位置开始</p></li></ul><p>代码示例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File file1 = <span class="keyword">new</span> File(<span class="string">&quot;hello1.txt&quot;</span>);</span><br><span class="line">File file2 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\idea_worksapce\\holiday_java_study\\java_io\\hello2.txt&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：<strong>运行上述代码只是在内存层面创建了文件对象，文件夹中并不会看到有新文件产生</strong>。</p><blockquote><p>**路径分隔符 **</p><p>路径分隔符与系统有关</p><ul><li>windows和DOS系统默认使用“\”来表示。</li><li>UNIX和URL使用“/”来表示</li></ul><p>为了支持跨平台运行，提供了一下三种方法解决：</p><ul><li><p>第一种双斜杆，避免被转译</p><p><code>File file1 = new File(&quot;d:\\yourFile\\info.txt&quot;);</code> </p></li><li><p>第二种用File类中的已定义好的一个常量<code>File.separator</code></p><p>``File file2 = new File(“d:” + File.separator + “yourFile” + File.separator + “info.txt”);`</p></li><li><p>第三种用单反斜杠</p><p><code>File file3 = new File(&quot;d:/yourFile&quot;);</code></p></li></ul></blockquote><p>​        </p><p>2.<code>public File(String parent,String child)</code>:以parent为父路径，child为子路径创建File对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File file3 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\idea_worksapce\\holiday_java_study\\java_io&quot;</span>,<span class="string">&quot;file&quot;</span>);</span><br></pre></td></tr></table></figure><p>3.<code>public File(File parent,String child)</code>:根据一个父File对象和子文件路径创建File对象.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File file4 = <span class="keyword">new</span> File(file3,<span class="string">&quot;hello3.txt&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="File类常用方法"><a href="#File类常用方法" class="headerlink" title="File类常用方法"></a>File类常用方法</h3><ul><li>File类的获取功能</li></ul><p><code>public String getPath()</code> ：获取路径<br><code>public String getName()</code> ：获取名称<br><code>public String getParent()</code>：获取上层文件目录路径。若无，返回null<br><code>public long length()</code> ：获取文件长度（即：字节数）。不能获取目录的长度。<br><code>public long lastModified()</code> ：获取最后一次的修改时间，毫秒值</p><p>–这两种方法适用于文件目录–</p><p><code>public String[] list()</code> ：获取指定目录下的所有文件或者文件目录的名称数组<br><code>public File[] listFiles()</code> ：获取指定目录下的所有文件或者文件目录的File数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    File file1 = <span class="keyword">new</span> File(<span class="string">&quot;hello1.txt&quot;</span>);</span><br><span class="line">    File file2 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\idea_worksapce\\holiday_java_study\\java_io\\hello2.txt&quot;</span>);</span><br><span class="line">    System.out.println(file1.getAbsolutePath());</span><br><span class="line">    System.out.println(file2.getAbsolutePath());</span><br><span class="line">    System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    System.out.println(file1.getPath());</span><br><span class="line">    System.out.println(file2.getPath());</span><br><span class="line">    System.out.println(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">    System.out.println(file1.getName());</span><br><span class="line">    System.out.println(file2.getName());</span><br><span class="line">    System.out.println(<span class="number">3</span>);</span><br><span class="line">    System.out.println(file1.getParent());<span class="comment">//用相对路径结果null</span></span><br><span class="line">    System.out.println(file2.getParent());</span><br><span class="line">    System.out.println(<span class="string">&quot;4&quot;</span>);</span><br><span class="line">    System.out.println(file1.length());<span class="comment">//此时文件还不存在，结果为0.可新建文件验证</span></span><br><span class="line">    System.out.println(file2.length());</span><br><span class="line">    System.out.println(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">    System.out.println(file1.lastModified());<span class="comment">//记录上次修改时间点的毫秒数，例如：1610352348114</span></span><br><span class="line">    <span class="comment">//System.out.println(new Date(file1.lastModified());</span></span><br><span class="line">    <span class="comment">//可以获得准确时间点，例如：Mon Jan 11 16:05:48 CST 2021</span></span><br><span class="line">    System.out.println(file2.lastModified());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">运行结果如下：</span><br><span class="line">D:\idea_worksapce\holiday_java_study\java_io\hello1.txt</span><br><span class="line">D:\idea_worksapce\holiday_java_study\java_io\hello2.txt</span><br><span class="line">1</span><br><span class="line">hello1.txt</span><br><span class="line">D:\idea_worksapce\holiday_java_study\java_io\hello2.txt</span><br><span class="line">2</span><br><span class="line">hello1.txt</span><br><span class="line">hello2.txt</span><br><span class="line">3</span><br><span class="line">null</span><br><span class="line">D:\idea_worksapce\holiday_java_study\java_io</span><br><span class="line">4</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">5</span><br><span class="line">0</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>文件目录测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test3</span><span class="params">()</span></span>&#123;</span><br><span class="line">    File file1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\idea_worksapce\\holiday_java_study&quot;</span>);</span><br><span class="line">    String[] list = file1.list();</span><br><span class="line">    <span class="keyword">for</span>(String s : list)&#123;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    File[] file = file1.listFiles();</span><br><span class="line">    <span class="keyword">for</span>(File f : file)&#123;</span><br><span class="line">        System.out.println(f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.idea</span><br><span class="line">holiday_java_study.iml</span><br><span class="line">java_io</span><br><span class="line">out</span><br><span class="line">src</span><br><span class="line">D:\idea_worksapce\holiday_java_study\.idea</span><br><span class="line">D:\idea_worksapce\holiday_java_study\holiday_java_study.iml</span><br><span class="line">D:\idea_worksapce\holiday_java_study\java_io</span><br><span class="line">D:\idea_worksapce\holiday_java_study\out</span><br><span class="line">D:\idea_worksapce\holiday_java_study\src</span><br></pre></td></tr></table></figure><ul><li><p>File类的重命名功能</p><p><code>public boolean renameTo(File dest):</code>把文件重命名为指定的文件路径</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">//本例将hello.txt移动到C:\\Users\\1\\Desktop并更名为hello2.txt</span></span><br><span class="line"><span class="comment">//注意file1在硬盘中要存在，file2在硬盘中不能存在。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test4</span><span class="params">()</span></span>&#123;</span><br><span class="line">    File file1  = <span class="keyword">new</span> File(<span class="string">&quot;hello1.txt&quot;</span>);</span><br><span class="line">    File file2 = <span class="keyword">new</span> File(<span class="string">&quot;C:\\Users\\1\\Desktop\\hello2.txt&quot;</span>);</span><br><span class="line">    Boolean renameto = file1.renameTo(file2);</span><br><span class="line">    System.out.println(renameto);<span class="comment">// 如果移动成功返回true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>File类的判断功能</p><p><code>public boolean isDirectory()</code>：判断是否是文件目录<br><code>public boolean isFile() </code>：判断是否是文件<br><code>public boolean exists() </code>：判断是否存在<br><code>public boolean canRead()</code> ：判断是否可读<br><code>public boolean canWrite()</code> ：判断是否可写<br><code>public boolean isHidden() </code>：判断是否隐藏</p></li><li><p>File类的创建与删除功能</p></li></ul><p><code>public boolean createNewFile() </code>：创建文件。若文件存在，则不创建，返回false<br><code>public boolean mkdir()</code> ：创建文件目录。如果此文件目录存在，就不创建了。<br>                                                    如果此文件目录的上层目录不存在，也不创建。<br><code>public boolean mkdirs()</code> ：创建文件目录。如果上层文件目录不存在，一并创建<br><code>public boolean delete()</code>：删除文件或者文件夹</p><p>文件的创建与删除</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test5</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    File file = <span class="keyword">new</span> File(<span class="string">&quot;hello.txt&quot;</span>);</span><br><span class="line">    <span class="comment">//如果文件不存在则创建文件，如果存在则删除文件。</span></span><br><span class="line">    <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">        file.createNewFile();</span><br><span class="line">        System.out.println(<span class="string">&quot;文件创建成功&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        file.delete();</span><br><span class="line">        System.out.println(<span class="string">&quot;文件删除成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目录的创建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">// 1.第一种情况io目录已存在，则两种方法都能成功创建。</span></span><br><span class="line"><span class="comment">// 2.第二种情况，io目录存在，但是iox目录不存在，则mkdir方法不能创建目录，mkdirs方法能成功创建。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test6</span><span class="params">()</span></span>&#123;</span><br><span class="line">    File file1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\io\\io1&quot;</span>);</span><br><span class="line">   <span class="comment">// File file1 = new File(&quot;D:\\io\\iox\\io1&quot;);</span></span><br><span class="line">    Boolean mkdir = file1.mkdir();</span><br><span class="line">    <span class="keyword">if</span>(mkdir)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;创建成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    File file2 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\io\\io2&quot;</span>);</span><br><span class="line">   <span class="comment">// File file2 = new File(&quot;D:\\io\\iox\\io2&quot;);</span></span><br><span class="line">    Boolean mkdirs = file2.mkdirs();</span><br><span class="line">    <span class="keyword">if</span>(mkdirs)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;创建成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="File类的几个练习题"><a href="#File类的几个练习题" class="headerlink" title="File类的几个练习题"></a>File类的几个练习题</h3><ol><li>给定一个已存在的文件，在其所在目录下创建新的目录或文件。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test1</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    File file = <span class="keyword">new</span> File(<span class="string">&quot;hello.txt&quot;</span>);</span><br><span class="line">    File parentFile = <span class="keyword">new</span> File(file.getParentFile(),<span class="string">&quot;hello2.txt&quot;</span>);</span><br><span class="line">    <span class="keyword">boolean</span> flag = parentFile.createNewFile();</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;创建成功&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        parentFile.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>判断指定目录下是否有后缀名为.jpg的文件，如果有，就输出该文件名称。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="string">&quot;D:\\io&quot;</span>);</span><br><span class="line">String[] list = file.list();</span><br><span class="line"><span class="keyword">for</span>(String s : list)&#123;</span><br><span class="line">        <span class="comment">//String类endsWith函数，判断字符串是否以给定的str结尾</span></span><br><span class="line"><span class="keyword">if</span>(s.endsWith(<span class="string">&quot;jpg&quot;</span>))&#123;</span><br><span class="line">System.out.println(s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="I-O流的分类"><a href="#I-O流的分类" class="headerlink" title="I/O流的分类"></a>I/O流的分类</h2><p>1.输入（input）和输出（output）</p><p>我们站在内存的角度。</p><p>内存-&gt;硬盘（用txt、jpg等形式保存），输出；硬盘-&gt;内存，输入。</p><p>2.分类</p><ul><li><p>按操作数据单位不同分为：字节流(8 bit)，字符流(16 bit)</p></li><li><p>按数据流的流向不同分为：输入流，输出流  </p></li><li><p>按流的角色的不同分为：节点流，处理流</p></li></ul><table><thead><tr><th align="center"></th><th align="center">字节流</th><th align="center">字符流</th></tr></thead><tbody><tr><td align="center">输入流</td><td align="center">InputStream</td><td align="center">Reader</td></tr><tr><td align="center">输出流</td><td align="center">OutputStream</td><td align="center">Writer</td></tr></tbody></table><p>java io流的类都是由这四个类派生出来的，并且以这四个类名作为后缀。</p><p>下图显示了IO流的体系，要特别注意的标成了深色。</p><img src="../images/java-IO%E6%B5%81/image-20210111192730116.png" alt="image-20210111192730116" style="zoom:80%;" /><p>下面主要来介绍节点流（文件流）和缓冲流。</p><h2 id="节点流（文件流）"><a href="#节点流（文件流）" class="headerlink" title="节点流（文件流）"></a>节点流（文件流）</h2><p><strong>注：若用单元测试方法，相对路径是以当前Module为根目录；若用main方法，相对路径是以当前工程为根目录。</strong></p><p>节点流包括：FileReader、FileWriter、FileInputStream、FileOutputStream 四种。</p><ul><li>对于文本文件，（.txt、.java、.cpp）采用字符流（FileReader、FileWriter）</li><li>对于非文本文件，（.jpg、.mp4、.avi、.doc、.ppt）采用字节流（FileInputStream、FileOutputStream）</li></ul><h3 id="FileReader使用"><a href="#FileReader使用" class="headerlink" title="FileReader使用"></a>FileReader使用</h3><p><strong>例题：读取hello.txt文件的内容并打印出来</strong></p><p>1.用<code>read()</code>方法读取单个字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">//从hello.txt中读取内容</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test1</span><span class="params">()</span>  </span>&#123;</span><br><span class="line">    FileReader fileReader = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        File file1 = <span class="keyword">new</span> File(<span class="string">&quot;hello.txt&quot;</span>);</span><br><span class="line">        fileReader = <span class="keyword">new</span> FileReader(file1);</span><br><span class="line">        <span class="keyword">int</span> data ;</span><br><span class="line">        <span class="keyword">while</span>((data = fileReader.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.print((<span class="keyword">char</span>)data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(fileReader != <span class="keyword">null</span>)</span><br><span class="line">                fileReader.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.用<code>read(char[] cbuf)</code>一次读取多个字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FileReader fr = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        File file  = <span class="keyword">new</span> File(<span class="string">&quot;hello.txt&quot;</span>);</span><br><span class="line">        fr = <span class="keyword">new</span> FileReader(file);</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">char</span>[] cbuf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">while</span>((len = fr.read(cbuf)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)&#123;</span><br><span class="line">                System.out.print(cbuf[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(fr != <span class="keyword">null</span>)</span><br><span class="line">                fr.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li><p><code>int read()</code> 读取单个字符。作为整数读取的字符，范围在 0 到 65535 之间 (0x00-0xffff)（2个 字节的Unicode码），如果已到达流的末尾，则返回 -1 。</p></li><li><p><code>int read(char[] cbuf)</code> 将字符读入数组。如果已到达流的末尾，则返回 -1。否则返回本次读取的字符数。</p></li></ul><h3 id="FileWriter使用"><a href="#FileWriter使用" class="headerlink" title="FileWriter使用"></a>FileWriter使用</h3><p><strong>例题：向hello.txt中写数据</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test3</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FileWriter fw = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;hello.txt&quot;</span>);</span><br><span class="line">        fw = <span class="keyword">new</span> FileWriter(file);</span><br><span class="line">        fw.write(<span class="string">&quot;asd&quot;</span>);<span class="comment">//向hello.txt写入asd字符串</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(fw != <span class="keyword">null</span>)</span><br><span class="line">                fw.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>解释</strong></p><ul><li>若文件不存在，则会自动创建一个新文件，并向里面写入数据。</li><li>若文件存在<ul><li>如果使用的构造器是<code>FileWriter(file)</code>或<code>FileWriter(file,false)</code>,每次写出会覆盖原来的内容</li><li>如果使用的构造器是<code>FileWriter(file,true)</code>，每次写出不会覆盖原来的内容，在原来基础上追加内容</li></ul></li></ul><h3 id="FileReader和FileWriter一同使用"><a href="#FileReader和FileWriter一同使用" class="headerlink" title="FileReader和FileWriter一同使用"></a>FileReader和FileWriter一同使用</h3><p><strong>例题：将hello.txt中的内容复制到test.txt中</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test4</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    FileReader fr = <span class="keyword">null</span>;</span><br><span class="line">    FileWriter fw = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;hello.txt&quot;</span>);</span><br><span class="line">        File file1 = <span class="keyword">new</span> File (<span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line">        fr = <span class="keyword">new</span> FileReader(file);</span><br><span class="line">        fw = <span class="keyword">new</span> FileWriter(file1);</span><br><span class="line">        <span class="keyword">char</span>[] cbuf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span>((len = fr.read(cbuf)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            String str = <span class="keyword">new</span> String(cbuf,<span class="number">0</span>,len);</span><br><span class="line">            fw.write(str);</span><br><span class="line">            <span class="comment">//fw.write(cbuf,0,len);上面两句可直接用这句来代替</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(fr != <span class="keyword">null</span>)</span><br><span class="line">                fr.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(fw != <span class="keyword">null</span>)</span><br><span class="line">                fw.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>上述是字符流的使用，因为字符流通常用来处理文本，处理不了图片，需要用字节流来处理。</p><h3 id="FileInputStream和FileOutputStream实现图片复制"><a href="#FileInputStream和FileOutputStream实现图片复制" class="headerlink" title="FileInputStream和FileOutputStream实现图片复制"></a>FileInputStream和FileOutputStream实现图片复制</h3><p>**例题：复制1.png为2.png</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test5</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FileInputStream fr = <span class="keyword">null</span>;</span><br><span class="line">    FileOutputStream fw = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;1.png&quot;</span>);</span><br><span class="line">        File file1 = <span class="keyword">new</span> File (<span class="string">&quot;2.png&quot;</span>);</span><br><span class="line">        fr = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">        fw = <span class="keyword">new</span> FileOutputStream(file1);</span><br><span class="line">        <span class="keyword">byte</span>[] cbuf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span>((len = fr.read(cbuf)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            fw.write(cbuf,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(fr != <span class="keyword">null</span>)</span><br><span class="line">                fr.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(fw != <span class="keyword">null</span>)</span><br><span class="line">                fw.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，上述程序与文本的复制并无很大差别，只是将FileReader和FileWriter换成了FileInputStream和FileOutputStream，读取时采用了byte[]数组。</p><h2 id="缓冲流"><a href="#缓冲流" class="headerlink" title="缓冲流"></a>缓冲流</h2><p>分类：</p><ul><li>字符流：BufferedReader、BufferedWriter</li><li>字节流：BufferedInputStream、BufferedOutputStream</li></ul><p>作用：提高读取、写入的速度。</p><p><strong>例题1：用缓冲流实现图片复制</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test6</span><span class="params">()</span></span>&#123;</span><br><span class="line">    BufferedInputStream br = <span class="keyword">null</span>;</span><br><span class="line">    BufferedOutputStream bw = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;1.png&quot;</span>);</span><br><span class="line">        File file1 = <span class="keyword">new</span> File (<span class="string">&quot;2.png&quot;</span>);</span><br><span class="line">        <span class="comment">//相当于再套了一层缓冲流</span></span><br><span class="line">        br = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(file));</span><br><span class="line">        bw = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(file1));</span><br><span class="line">        <span class="keyword">byte</span>[] cbuf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span>((len = br.read(cbuf)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            bw.write(cbuf,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">//要求先关闭外面的流，再关闭内层的流，此处关闭外层的会自动关闭内层的。</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(br != <span class="keyword">null</span>)</span><br><span class="line">                br.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(bw != <span class="keyword">null</span>)</span><br><span class="line">                bw.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>例题2：用缓冲流实现文本复制</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test7</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedReader br = <span class="keyword">null</span>;</span><br><span class="line">    BufferedWriter bw = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">&quot;hello.txt&quot;</span>));</span><br><span class="line">        bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">&quot;test.txt&quot;</span>));</span><br><span class="line">        String str;</span><br><span class="line">        <span class="keyword">while</span>((str = br.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">            bw.write(str);</span><br><span class="line">            bw.newLine();<span class="comment">//因为br.readLine不会读取换行符，要手动读取</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(br != <span class="keyword">null</span>)</span><br><span class="line">                br.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(bw != <span class="keyword">null</span>)</span><br><span class="line">                bw.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><p><code>readLine()</code>函数每次读取一行返回字符串，当读取空行时返回null。</p><p><code>bw.newLine()</code>读取一个空行，用来换行。</p><h2 id="文件流和缓冲流小结"><a href="#文件流和缓冲流小结" class="headerlink" title="文件流和缓冲流小结"></a>文件流和缓冲流小结</h2><p>其中所涉及的到的类和函数如下图所示：</p><p><img src="../images/java-IO%E6%B5%81/image-20210111215742269.png"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;java io 其实看过好几遍了，但是看过就忘了，没有系统的总结，所以记下来加深印象。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="java基础" scheme="http://example.com/categories/java%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>git使用</title>
    <link href="http://example.com/2021/01/08/git%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2021/01/08/git%E4%BD%BF%E7%94%A8/</id>
    <published>2021-01-08T03:31:59.000Z</published>
    <updated>2021-01-10T11:49:21.788Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本博客的搭建用到了git，<del>出于对知识的热爱</del>（在家太无聊了），决定写一个git的简单使用</p></blockquote><a id="more"></a><h2 id="git简要介绍"><a href="#git简要介绍" class="headerlink" title="git简要介绍"></a>git简要介绍</h2><p>Git官网：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>Git图标：<img src="/images/git%E4%BD%BF%E7%94%A8/Git%E5%9B%BE%E6%A0%87.jpeg" alt="Git图标" style="zoom:80%;" /></p><p>Git 是一个<strong>开源的分布式版本控制系统</strong>，用于敏捷高效地处理任何或小或大的项目。</p><p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><p>Git版本控制</p><ul><li>个人操作</li><li>团队协作：记录每次修改的情况。</li></ul><h2 id="git的安装"><a href="#git的安装" class="headerlink" title="git的安装"></a>git的安装</h2><p>请参考<a href="https://www.jianshu.com/p/bebba0d8038e">安装教程</a>。</p><h2 id="git的配置文件"><a href="#git的配置文件" class="headerlink" title="git的配置文件"></a>git的配置文件</h2><p>有以下三种配置文件，若文件中定义的值有冲突，优先级：仓库&gt;用户&gt;系统。</p><ul><li><code>/etc/gitconfig</code> 文件：系统中对所有用户都普遍适用的配置文件。</li><li><code>~/.gitconfig</code> 文件：某个用户目录下的配置文件。</li><li>用户定义的各个库中Git目录下的<code>.git/config</code>配置文件，只对当前仓库有效。</li></ul><p>用<code>git config --list</code>命令可以查看自己的配置文件的信息。</p><h2 id="git的工作流程"><a href="#git的工作流程" class="headerlink" title="git的工作流程"></a>git的工作流程</h2><p><img src="/images/git%E4%BD%BF%E7%94%A8/%E6%B5%81%E7%A8%8B.png" alt="git工作流程"></p><p>名词解释：</p><ul><li>workspace：工作区</li><li>staging area：暂存区/缓存区</li><li>local repository：或本地仓库</li><li>remote repository：远程仓库</li></ul><h2 id="git的基本操作"><a href="#git的基本操作" class="headerlink" title="git的基本操作"></a>git的基本操作</h2><ol><li>初始化本地仓库：<code>git init</code></li><li>从远程仓库下载一个项目：<code>git clone</code></li><li>添加文件到暂存区：<code>git add</code></li><li>提交暂存区到本地仓库：<code>git commit</code></li><li>从本地仓库提交到远程仓库：<code>git push</code></li></ol><h3 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h3><p><code>git init</code>用于初始化仓库，会把当前目录当做本地仓库，并多出一个<code>.git</code>文件。</p><p><img src="/images/git%E4%BD%BF%E7%94%A8/git%20init.png" alt="git init"></p><h3 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h3><p><code>git clone</code>用于从远程仓库下载项目。</p><p>用法：<code>git clone (项目的url) [修改为其他名称]</code></p><p><img src="/images/git%E4%BD%BF%E7%94%A8/git%20clone.png" alt="git clone"></p><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><p><code>git add</code>将文件添加到缓存区</p><p>用法：<code>git add (要添加的文件名)</code></p><p><code>git status</code>用来查看提交状态，也可用<code>git status -s</code>查看简要情况</p><p><img src="/images/git%E4%BD%BF%E7%94%A8/git%20add.png" alt="git add"></p><h3 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h3><p><code>git commit</code>将缓存区的文件提交到本地仓库</p><p>用法：<code>git commit -m (&#39;描述信息&#39;)</code></p><p><img src="/images/git%E4%BD%BF%E7%94%A8/git%20commit.png" alt="git commit"></p><h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><p><code>git push</code>用于将本地仓库的文件提交到远程仓库</p><p>提交过程中，可能会弹出github登录的界面，如下</p><img src="/images/git%E4%BD%BF%E7%94%A8/github%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2.png" alt="github登录界面" style="zoom: 80%;" /><p>提交成功后的界面如下图所示，当然我们可以登录到github到对应的仓库中寻找，也能找到被提交的文件。</p><p><img src="/images/git%E4%BD%BF%E7%94%A8/git%20push.png" alt="git push"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>以上是git最最基本的用法，还有许多命令等到用到的时候再写。</p><hr><p>参考文章：<a href="https://www.runoob.com/git/git-tutorial.html">https://www.runoob.com/git/git-tutorial.html</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本博客的搭建用到了git，&lt;del&gt;出于对知识的热爱&lt;/del&gt;（在家太无聊了），决定写一个git的简单使用&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="分享" scheme="http://example.com/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>hexo+Typora图片插入</title>
    <link href="http://example.com/2021/01/07/hexo+Typora%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/"/>
    <id>http://example.com/2021/01/07/hexo+Typora%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/</id>
    <published>2021-01-07T09:17:05.000Z</published>
    <updated>2021-01-08T12:41:09.721Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文记录下hexo+Typora图片插入时遇到的问题与解决方法</p></blockquote><a id="more"></a><h2 id="简要介绍"><a href="#简要介绍" class="headerlink" title="简要介绍"></a>简要介绍</h2><p>hexo：用官网的来话，是一种快速、简洁且高效的博客框架。</p><p>Typora：一款Markdown编辑器，最大特点是所见即所得，界面十分简洁。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>首先说明，所有博客文件均保存在 <code>Blog/source/_posts/</code>文件夹下。</p><p>在Typora中能够显示图片，但在博客中显示失败</p><p>如下：</p><p><img src="/images/hexo+Typora%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/Typora%E4%B8%AD%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA.png" alt="Typora中正常显示"></p><p><img src="/images/hexo+Typora%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA.png" alt="博客中无法显示"></p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>上面的猫猫表情在Typora中采用的是绝对路径，但是hexo是要用服务器访问自己blog文件夹中的资源的，显然要用相对路径的方式放置图片，让服务器能够访问到图片。</p><h2 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h2><p>1.在<code>Blog/source</code>目录下创建一个<code>images</code>文件夹，用来存放文章中的图片</p><p>2.进入Typora-&gt;文件-&gt;偏好设置（也可直接按ctrl+逗号）-&gt;图像，按下图所示勾选选项</p><p><img src="/images/hexo+Typora%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/1.png"></p><p>解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;images&#x2F;$&#123;filename&#125;</span><br></pre></td></tr></table></figure><blockquote><p>将会在包含.md文件的目录的上一级目录（也就是是<code>source</code>目录下）的<code>images</code>目录下新建一个与文章同名的文件夹，里面放的就是本篇文章的所有图片。</p></blockquote><p>效果如下图所示：</p><p><img src="/images/hexo+Typora%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/2.png"></p><p>当然，也可自行定义图片保存位置，具体不再赘述。</p><p>3.进入Typora-&gt;格式-&gt;图像-&gt;设置图片根目录，设置<code>Blog/source</code>作为图片根目录。</p><p><strong>注意：这里的图片根目录是与上一步的图片保存位置相对应的。</strong></p><p><strong>若将图片保存到了<code>Blog/source</code>路径下的其他位置，这里的图片根目录也要随之改变。</strong></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这里涉及到的主要是资源的访问问题，注意相对路径和绝对路径。</p><p>参考文章：<a href="https://www.cnblogs.com/yinyoupoet/p/13287385.html">https://www.cnblogs.com/yinyoupoet/p/13287385.html</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文记录下hexo+Typora图片插入时遇到的问题与解决方法&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="分享" scheme="http://example.com/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://example.com/2021/01/06/my-first/"/>
    <id>http://example.com/2021/01/06/my-first/</id>
    <published>2021-01-06T02:43:28.000Z</published>
    <updated>2021-01-07T07:54:04.483Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World!"></a>Hello World!</h1><p>You know,the first try always starts with Hello World.</p><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World!&quot;&gt;&lt;/a&gt;Hello World!&lt;/h1&gt;&lt;p&gt;You know,the first try always starts with Hello World.&lt;/p&gt;</summary>
    
    
    
    <category term="test" scheme="http://example.com/categories/test/"/>
    
    
    <category term="博客" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
